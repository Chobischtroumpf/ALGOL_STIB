name: Build, Release, and Publish

on:
    push:
        tags:
            - 'v*'  # Push events to tags matching v*, e.g., v1.0, v20.15.10

jobs:
    build-and-release:
        runs-on: ubuntu-latest
        permissions:
            contents: write  # Needed for creating releases
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  lfs: true

            - name: Set up JDK 23
              uses: actions/setup-java@v4
              with:
                  distribution: 'temurin'
                  java-version: '23'
                  cache: maven

            - name: Run tests
              run: mvn test

            - name: Build with Maven
              run: mvn clean package

            - name: Verify JAR file exists
              run: |
                  if [ ! -f "target/ALGOL_STIB-1.0-SNAPSHOT.jar" ]; then
                    echo "JAR file not found!"
                    exit 1
                  fi
                  echo "JAR file size:"
                  ls -lh target/ALGOL_STIB-1.0-SNAPSHOT.jar

            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v1
              with:
                  files: target/ALGOL_STIB-1.0-SNAPSHOT.jar
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    publish:
        needs: build-and-release  # This ensures publishing only happens after successful release
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            - uses: actions/checkout@v4
              with:
                  lfs: true

            - name: Set up JDK 23
              uses: actions/setup-java@v4
              with:
                  distribution: 'temurin'
                  java-version: '23'
                  server-id: github
                  settings-path: ${{ github.workspace }}

            - name: Build with Maven
              run: mvn -B package --file pom.xml

            - name: Publish to GitHub Packages
              run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
              env:
                  GITHUB_TOKEN: ${{ github.token }}